[build-system]
requires = ["setuptools>=61.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[project]
name = "spopt"
dynamic = ["version"]
authors = [
    { name = "James D. Gaboardi", email = "jgaboardi@gmail.com" },
    { name = "Xin Feng", email = "xin.feng@ucr.edu" },
]

maintainers = [{ name = "spopt contributors" }]
license = { text = "BSD 3-Clause" }
description = "Spatial Optimization in PySAL"
keywords = ["spatial optimization"]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
]
requires-python = ">=3.10"
dependencies = [
    "geopandas>=0.12",
    "libpysal>=4.6",
    "mapclassify>=2.5",
    "networkx>=2.7",
    "numpy>=1.22",
    "pandas>=1.4,!=1.5.0",
    "pulp>=2.7",
    "scikit-learn>=1.1",
    "scipy>=1.8",
    "shapely>=2.0.1",
    "spaghetti>=1.6.4",
    "tqdm>=4.63.0",
    "pointpats>=2.3.0"
]


[project.urls]
Home = "https://pysal.org/spopt/"
Repository = "https://github.com/pysal/spopt"

[project.optional-dependencies]
tests = [
    "codecov",
    "coverage",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
]
dev = ["pre-commit"]
docs = [
    "nbsphinx",
    "numpydoc",
    "pandoc",
    "sphinx",
    "sphinxcontrib-bibtex",
    "sphinx_bootstrap_theme",
]
notebooks = [
    "folium",
    "glpk",
    "inequality",
    "matplotlib>=3.6",
    "matplotlib-scalebar",
    "overpy",
    "routingpy",
    "seaborn",
    "watermark",
]


[tool.setuptools.packages.find]
include = ["spopt", "spopt.*"]

[tool.black]
line-length = 88

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "UP", "N", "B", "A", "C4", "SIM", "ARG"]
target-version = "py310"
exclude = ["spopt/tests/*", "docs/*"]

[tool.ruff.per-file-ignores]
 "*__init__.py" = [
     "F401",  # imported but unused
     "F403",  # star import; unable to detect undefined names
 ]

[tool.coverage.run]
source = ["./spopt"]

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "except ModuleNotFoundError:",
    "except ImportError",
]
ignore_errors = true
omit = ["spopt/tests/*", "docs/conf.py"]
