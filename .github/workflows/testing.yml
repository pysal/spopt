 name: Continuous Integration
 
 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 23 * * *'
   workflow_dispatch:
    inputs:
      version:
        description: Manual CI Run
        default: test
        required: false

 jobs:
   tests:
     name: ${{ matrix.os }}, ${{ matrix.environment-file }}
     runs-on: ${{ matrix.os }}
     timeout-minutes: 30
     strategy:
       matrix:
         os: [ubuntu-latest]
         environment-file: [
            ci/310-oldest.yaml,
            ci/310-latest.yaml,
            ci/311-latest.yaml,
            ci/312-latest.yaml,
            ci/312-dev.yaml,
         ]
         include:
           - environment-file: ci/312-latest.yaml
             os: macos-latest
           - environment-file: ci/312-latest.yaml
             os: windows-latest
       fail-fast: false

     defaults:
       run:
         shell: bash -l {0}

     steps:
       - name: checkout repo
         uses: actions/checkout@v4
         with:
           fetch-depth: 0 # Fetch all history for all branches and tags.
       
       - name: setup micromamba
         uses: mamba-org/setup-micromamba@v1
         with:
           environment-file: ${{ matrix.environment-file }}
           micromamba-version: 'latest'
        
       ##############################################################################
       #- name: install pulp via pip
       #  run: |
       #    pip install pulp
       #    pulptest
       ##############################################################################
       
       - name: environment info
         run: |
           micromamba info
           micromamba list
       
       - name: spatial versions
         run: 'python -c "import geopandas; geopandas.show_versions();"'
       
       - name: run tests
         run: |
           pytest spopt \
           -v \
           -r a \
           -n auto \
           --color yes \
           --cov spopt \
           --cov-append \
           --cov-report term-missing \
           --cov-report xml
       
       - name: codecov
         uses: codecov/codecov-action@v3
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: spopt-codecov

       - name: Generate and publish the report
         if: |
           failure()
           && steps.status.outcome == 'failure'
           && github.event_name == 'schedule'
           && github.repository_owner == 'pysal'
         uses: xarray-contrib/issue-from-pytest-log@v1
         with:
           log-path: pytest-log.jsonl
