 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 23 * * *'

 jobs:
   unittests:
     name: ${{ matrix.os }}, ${{ matrix.environment-file }}
     runs-on: ${{ matrix.os }}
     timeout-minutes: 30 
     strategy:
       matrix:
         os: [ubuntu-latest]
         environment-file: [.ci/37.yaml, .ci/38.yaml, .ci/39.yaml, .ci/310.yaml, .ci/310-DEV.yaml]
         include:
           - environment-file: .ci/310.yaml
             os: macos-latest
           - environment-file: .ci/310.yaml
             os: windows-latest
    
     steps:
       - name: checkout repo
         uses: actions/checkout@v2
       
       - name: setup micromamba
         uses: mamba-org/provision-with-micromamba@main
         with:
           environment-file: ${{ matrix.environment-file }}
           micromamba-version: 'latest'
       - name: install pulp via pip
         shell: bash -l {0}
         run: pip install pulp 
       
       - name: install bleeding edge libpysal (only Ubuntu / Python 3.10)
         shell: bash -l {0}
         run: pip install git+https://github.com/pysal/libpysal.git@master
         if: matrix.os == 'ubuntu-latest' && contains(matrix.environment-file, 'DEV')
       
       - name: run tests - bash
         shell: bash -l {0}
         run: pytest -v spopt --cov=spopt --cov-report=xml
         if: matrix.os != 'windows-latest'
       
       - name: run tests - powershell
         shell: powershell
         run: pytest -v spopt --cov=spopt --cov-report=xml
         if: matrix.os == 'windows-latest'
       
       - name: codecov
         uses: codecov/codecov-action@v2
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: spot-codecov
