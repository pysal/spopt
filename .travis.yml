language: minimal
sudo: false

matrix:
  fast_finish: true
  include:
      - name: "python-3.6"
        env: PY=3.6 PYSAL_PYPI=true
      - name: "python-3.6"
        env: PY=3.6 PYSAL_PYPI=false
      - name: "python-3.7"
        env: PY=3.7 PYSAL_PYPI=true
      - name: "python-3.7"
        env: PY=3.7 PYSAL_PYPI=false
      - name: "tarball"
        env: PY=3.7 PYSAL_PYPI=true
      - name: "tarball"
        env: PY=3.7 PYSAL_PYPI=false

before_install:
  # Install miniconda and create TEST env.
  - |
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
    conda update --quiet conda
    conda config --add channels conda-forge --force
    conda config --set channel_priority strict
    conda config --set safety_checks disabled
    conda create --name TEST python=$PY --file requirements.txt --file requirements_docs.txt --file requirements_tests.txt
    source activate TEST
    conda info --all

install:
  - pip install -e . --no-deps --force-reinstall
  - pip install -r requirements_pip.txt
  # configure dual tests (for dependency libpysal)
  - if "$PYSAL_PYPI"; then
        echo 'testing pypi libpysal' && pip install libpysal;
        else echo 'testing git libpysal'; git clone https://github.com/pysal/libpysal.git; cd libpysal; pip install .; cd ../;
    fi;

script:
  - if [[ $TRAVIS_JOB_NAME == python-* ]]; then
      travis_wait 45 nosetests --verbose --with-coverage --cover-package=spopt ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'tarball' ]]; then
      pip wheel . -w dist --no-deps ;
      twine check dist/* ;
    fi

notifications:
    email:
        recipients:
            {AUTHOR_EMAILS}
        on_success: change
        on_failure: always

after_success:
  - coveralls
